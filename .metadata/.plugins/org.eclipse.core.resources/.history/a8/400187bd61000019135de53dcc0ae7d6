package week5

object listz {

  def init[T](xs: List[T]): List[T] = xs match {
    case List()  => throw new Error("init of empty list")
    case List(x) => List()
    case y :: ys => y :: init(ys)
  }

  var a = "0123456".toList

  init(a)

  def removeAt[T](n: Int, xs: List[T]): List[T] = xs match {
    case List()              => xs
    case y :: ys if (n == 0) => ys
    case y :: ys             => List(y) ++ removeAt(n - 1, ys)
  }

	removeAt(7, a)


def merge(xs: List[Int], ys: List[Int]): List[Int] =
  (xs, ys) match {
    case (List(), ys) =>
  }

}