package week5

object reduce {
  def sum1(xs: List[Int]): Int = (0 :: xs) reduceLeft (_ + _)
                                                  //> sum1: (xs: List[Int])Int
  def sum2(xs: List[Int]): Int = (xs foldLeft 0)(_ + _)
                                                  //> sum2: (xs: List[Int])Int

  var l: List[Int] = List(6,9)                    //> l  : List[Int] = List()

  sum1(l)                                         //> res0: Int = 0
  sum2(l)                                         //> res1: Int = 0

  l.foldLeft(0)(_ + _)                            //> res2: Int = 0
}