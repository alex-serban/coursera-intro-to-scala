package week3


abstract class Arb {
  def include(x: Int): Arb 
  def remove(x: Int): Arb
  def contains(x: Int): Boolean
}

class Empty extends Arb {
  def include(x: Int) = new NonEmpty(x, new Empty, new Empty)
  def remove(x: Int) = this
  def contains(x: Int) = false
}

class NonEmpty(value: Int, left: Arb, right: Arb) extends Arb {
  def include(x: Int): Arb = {
    new NonEmpty(value, left, new NonEmpty(x, new Empty, new Empty))
  }
}



object ABC extends App {
  
}